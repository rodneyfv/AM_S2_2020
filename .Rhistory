m.aut.val <- t(matrix(((aut.val)),p,p))
result.cp.cor <- princomp(irisd,cor=TRUE)
corr.cp.cor <- aut.vec*sqrt(m.aut.val)
summary(result.cp.cor)
screeplot(result.cp.cor,type=c("lines"),main="autovalores",cex=1.2,cex.lab=1.2,cex.main=1.2)
#
cp1 <-  cbind((result.cp.cor$scores)[,1])
cp2 <-  cbind((result.cp.cor$scores)[,2])
#
# Dispersão entre as componentes
#
especie <- as.character(irisaux[,5])
par(mfrow=c(1,1))
plot(cp1,cp2,cex=1.2,col = c(irisaux[,5]),pch=19)
legend(-1,-1,col=c(1,2,3),pch=c(19,19,19),legend=c("setosa","versicolor","virginica"),bty="n",cex=1.2)
#
# Por grupo
par(mfrow=c(1,2))
boxplot(cp1~especie,cex=1.2,cex.lab=1.2,xlab="CP1")
boxplot(cp2~especie,cex=1.2,cex.lab=1.2,xlab="CP2")
par(mfrow=c(2,2))
hist(cp1[especie=="setosa"],probability=TRUE,main="CP1",xlab="",ylab="")
hist(cp1[especie=="versicolor"],probability=TRUE,main="CP1",xlab="",ylab="")
hist(cp1[especie=="virginica"],probability=TRUE,main="CP1",xlab="",ylab="")
par(mfrow=c(2,2))
hist(cp2[especie=="setosa"],probability=TRUE,main="CP2",xlab="",ylab="")
hist(cp2[especie=="versicolor"],probability=TRUE,main="CP2",xlab="",ylab="")
hist(cp2[especie=="virginica"],probability=TRUE,main="CP2",xlab="",ylab="")
#
par(mfrow=c(2,2))
qqPlot(scale(cp1[especie=="setosa"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP1",cex=1.2,main="setosa")
qqPlot(scale(cp1[especie=="versicolor"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP1",cex=1.2,main="versicolor")
qqPlot(scale(cp1[especie=="virginica"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP1",cex=1.2,main="virginica")
par(mfrow=c(2,2))
qqPlot(scale(cp2[especie=="setosa"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP2",cex=1.2,main="setosa")
qqPlot(scale(cp2[especie=="versicolor"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP2",cex=1.2,main="versicolor")
qqPlot(scale(cp2[especie=="virginica"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP2",cex=1.2,main="virginica")
#
#
par(mfrow=c(1,1))
biplot(result.cp.cor,xlabs=iris[,5])
#biplot.psych {psych}
especief<-iris[,5]
# Componente 1
fit.model<- lm(cp1~especief)
tsi<-diagnorm(fit.model)
par(mfrow=c(1,2))
boxplot(tsi,ylab="Resíduo Studentizado",cex=1.1,cex.axis=1.1,cex.lab=1.1)
envelnorm(fit.model)
summary(fit.model)
xtable(summary(fit.model))
#
m.C <- cbind(0,1,-1)
m.M <-0
testeF.CBM(fit.model,m.C,m.M)
# Médias preditas pelo modelo
vbeta<- cbind(as.numeric(coef(fit.model)))
mcovbeta <- vcov(fit.model)
mCm <- rbind(cbind(1,0,0),cbind(1,1,0),cbind(1,0,1))
mmedia <- mCm%*%vbeta
epmedia <- cbind(sqrt(diag(mCm%*%mcovbeta%*%t(mCm))))
quant <-qt(0.975,df=150-3)
ICmedia <- cbind(mmedia-quant*epmedia,mmedia+quant*epmedia)
mresult <- cbind(mmedia,epmedia,ICmedia)
xtable(mresult)
# bibliotecas necessárias
library(tidyverse)
data("diamonds")
head(diamonds)
?diamonds
dados <- diamonds %>% select(carat, depth, table, price, x, y, z)
medados<- rbind(apply(dados,2,mean),apply(dados,2,var),
apply(dados,2,sd),
100*apply(dados,2,sd)/apply(dados,2,mean),
apply(dados,2,min),apply(dados,2,quantile,0.5),
apply(dados,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Mínimo","Mediana","Máximo")
medados
# Diagrama de dispersão
plot(dados,cex=1.2)
dim(diamonds)
n <- nrow(diamonds)
# Diagrama de dispersão
plot(dados[sample(1:n,1000),],cex=1.2)
# Diagrama de dispersão
plot(dados[sample(1:n,1000,replace = FALSE),],cex=1.2)
# Diagrama de dispersão
plot(dados[sample(1:n,10000,replace = FALSE),],cex=1.2)
# Boxplot
par(mfrow=c(1,1))
boxplot(dados,cex=1.2,cex.lab=1.2,xlab="variável")
head(dados)
colnames(dados)
colnames(dados) <- c("quilate", "profundidade", "tabela",
"preço","x","y","z")
medados<- rbind(apply(dados,2,mean),apply(dados,2,var),
apply(dados,2,sd),
100*apply(dados,2,sd)/apply(dados,2,mean),
apply(dados,2,min),apply(dados,2,quantile,0.5),
apply(dados,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Mínimo","Mediana","Máximo")
medados
# Diagrama de dispersão
plot(dados[sample(1:n,5000,replace = FALSE),],cex=1.2)
# Boxplot
par(mfrow=c(4,2))
for(i in 1:7){
boxplot(dados[,i],cex=1.2,cex.lab=1.2,xlab=colnames(dados)[i])
}
# Boxplot
par(mfrow=c(4,2))
boxplot(dados[,i],cex=1.2,cex.lab=1.2,xlab=colnames(dados)[i])
# Boxplot
par(mfrow=c(2,1),mar=c(4,2,2,2))
boxplot(dados[,i],cex=1.2,cex.lab=1.2,xlab=colnames(dados)[i])
# Boxplot
par(mfrow=c(4,2),mar=c(4,4,2,2))
boxplot(dados[,i],cex=1.2,cex.lab=1.2,xlab=colnames(dados)[i])
for(i in 1:7){
boxplot(dados[,i],cex=1.2,cex.lab=1.2,xlab=colnames(dados)[i])
}
# Boxplot
par(mfrow=c(4,2),mar=c(3,3,2,2))
for(i in 1:7){
boxplot(dados[,i],cex=1.2,cex.lab=1.2,xlab=colnames(dados)[i])
}
# Boxplot
par(mfrow=c(4,2),mar=c(3,4,2,2))
for(i in 1:7){
boxplot(dados[,i],cex=1.2,cex.lab=1.2,xlab=colnames(dados)[i])
}
# Boxplot
par(mfrow=c(4,2),mar=c(4,2,2,2))
for(i in 1:7){
boxplot(dados[,i],cex=1.2,cex.lab=1.2,xlab=colnames(dados)[i])
}
# Boxplot
par(mfrow=c(2,2),mar=c(4,2,2,2))
for(i in 1:4){
boxplot(dados[,i],cex=1.2,cex.lab=1.2,xlab=colnames(dados)[i])
}
par(mfrow=c(2,2),mar=c(4,2,2,2))
for(i in 5:7){
boxplot(dados[,i],cex=1.2,cex.lab=1.2,xlab=colnames(dados)[i])
}
# Histograma
par(mfrow=c(2,2),mar=c(4,2,2,2))
for(i in 5:7){
hist(dados[,i],probability=TRUE,main=colnames(dados)[i],xlab="",ylab="")
}
for(i in 1:7){
hist(dados[,i],probability=TRUE,main=colnames(dados)[i],xlab="",ylab="")
}
i
hist(dados[,i],probability=TRUE,main=colnames(dados)[i],xlab="",ylab="")
class(dados[,1])
class(dados[[1]])
head(dados[[1]])
head(dados[,1])
# Histograma
par(mfrow=c(2,2),mar=c(4,2,2,2))
for(i in 1:7){
hist(dados[[i]],probability=TRUE,main=colnames(dados)[i],xlab="",ylab="")
}
# Histograma
par(mfrow=c(4,2),mar=c(4,2,2,2))
for(i in 1:7){
hist(dados[[i]],probability=TRUE,main=colnames(dados)[i],xlab="",ylab="")
}
# Matriz de covariâncias
cov(USArrests)
# Matriz de correlações
cor(USArrests)
p <- ncol(dados)
p
m.cov<-cov(dados)
m.cov
# Matriz de covariâncias
round(cov(dados),4)
# Matriz de correlações
round(cor(dados),2)
p <- ncol(dados)
m.cov<-cov(dados)
aut.val <-  eigen(m.cov)$values
aut.vec <- -(eigen(m.cov)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
m.dp.var <-  (matrix(diag(sqrt(m.cov)),p,p))
aut.val <-  eigen(m.cov)$values
aut.vec <- -(eigen(m.cov)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
m.dp.var <-  (matrix(diag(sqrt(m.cov)),p,p))
result.cp.cov <- princomp(dados,cor=FALSE)
sqrt(m.cov)
m.dp.var <-  (matrix(sqrt(diag(m.cov)),p,p))
m.dp.var
diag(m.cov)
screeplot(result.cp.cov,type=c("lines"),main="autovalores")
result.cp.cov
summary(result.cp.cov)
#
# ACP via  Matriz de Correlações
m.cor <- cor(dados)
aut.val <- eigen(m.cor)$values
aut.vec <- -(eigen(m.cor)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
result.cp.cor <- princomp(dados,cor=TRUE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)
summary(result.cp.cor)
screeplot(result.cp.cor,type=c("lines"),main="autovalores")
par(mfrow=c(1,1))
screeplot(result.cp.cov,type=c("lines"),main="autovalores")
screeplot(result.cp.cor,type=c("lines"),main="autovalores")
aut.vec
m.dp.var <-  diag(sqrt(diag(m.cov)))
result.cp.cov <- princomp(dados,cor=FALSE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)/m.dp.var
corr.cp.var
m.aut.val
m.dp.var
m.dp.var <-  (matrix(sqrt(diag(m.cov)),p,p))
m.dp.var
m.aut.val <- t(matrix(((aut.val)),p,p))
m.dp.var <-  (matrix(sqrt(diag(m.cov)),p,p))
result.cp.cov <- princomp(dados,cor=FALSE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)/m.dp.var
corr.cp.var
# ACP via Matriz de covariância
p <- ncol(dados)
m.cov<-cov(dados)
aut.val <-  eigen(m.cov)$values
aut.vec <- -(eigen(m.cov)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
m.dp.var <-  (matrix(sqrt(diag(m.cov)),p,p))
m.aut.val
m.dp.var
result.cp.cov <- princomp(dados,cor=FALSE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)/m.dp.var
corr.cp.var
summary(result.cp.cov)
par(mfrow=c(1,1))
screeplot(result.cp.cov,type=c("lines"),main="autovalores")
# ACP via  Matriz de Correlações
m.cor <- cor(dados)
aut.val <- eigen(m.cor)$values
aut.vec <- -(eigen(m.cor)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
result.cp.cor <- princomp(dados,cor=TRUE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)
summary(result.cp.cor)
screeplot(result.cp.cor,type=c("lines"),main="autovalores")
# ACP via  Matriz de Correlações
m.cor<-cor(dados)
aut.val <-  eigen(m.cor)$values
aut.vec <- -(eigen(m.cor)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
result.cp.cor <- princomp(dados,cor=TRUE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)
summary(result.cp.cor)
screeplot(result.cp.cor,type=c("lines"),main="autovalores",cex=1.2,cex.lab=1.2,cex.main=1.2)
data("diamonds")
head(diamonds)
dim(diamonds)
n <- nrow(diamonds)
dados <- diamonds %>% select(carat, depth, table, price, x, y, z)
colnames(dados) <- c("quilate", "profundidade", "tabela",
"preço","x","y","z")
medados<- rbind(apply(dados,2,mean),apply(dados,2,var),
apply(dados,2,sd),
100*apply(dados,2,sd)/apply(dados,2,mean),
apply(dados,2,min),apply(dados,2,quantile,0.5),
apply(dados,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Mínimo","Mediana","Máximo")
medados
t(medados)
medados<- rbind(round(apply(dados,2,mean),2),round(apply(dados,2,var),4),
round(apply(dados,2,sd),2),
round(100*apply(dados,2,sd)/apply(dados,2,mean),2),
apply(dados,2,min),apply(dados,2,quantile,0.5),
apply(dados,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Mínimo","Mediana","Máximo")
t(medados)
medados<- rbind(round(apply(dados,2,mean),2),round(apply(dados,2,var),2),
round(apply(dados,2,sd),2),
round(100*apply(dados,2,sd)/apply(dados,2,mean),2),
apply(dados,2,min),apply(dados,2,quantile,0.5),
apply(dados,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Mínimo","Mediana","Máximo")
t(medados)
# Diagrama de dispersão
plot(dados[sample(1:n,5000,replace = FALSE),],cex=1.2)
# Boxplot
par(mfrow=c(2,2),mar=c(4,2,2,2))
for(i in 1:4){
boxplot(dados[,i],cex=1.2,cex.lab=1.2,xlab=colnames(dados)[i])
}
par(mfrow=c(2,2),mar=c(4,2,2,2))
for(i in 5:7){
boxplot(dados[,i],xlab=colnames(dados)[i])
}
# Histograma
par(mfrow=c(4,2),mar=c(4,2,2,2))
for(i in 1:7){
hist(dados[[i]],probability=TRUE,main=colnames(dados)[i],xlab="",ylab="")
}
# Histograma
par(mfrow=c(4,2),mar=c(4,1,1,1))
for(i in 1:7){
hist(dados[[i]],probability=TRUE,main=colnames(dados)[i],xlab="",ylab="")
}
# Histograma
par(mfrow=c(4,2),mar=c(4,2,2,2))
for(i in 1:7){
hist(dados[[i]],probability=TRUE,main=colnames(dados)[i],xlab="",ylab="")
}
# Matriz de covariâncias
round(cov(dados),2)
# Matriz de correlações
round(cor(dados),2)
round(upper(cov(dados)),2)
round(upper.tri(cov(dados)),2)
?upper.tri
round(cov(dados)[upper.tri(cov(dados))],2)
cov(dados)[upper.tri(cov(dados))]
upper.tri(cov(dados))
cov(dados)[upper.tri(cov(dados))]
cov(dados)
lower.tri(cov(dados))
cov(dados)[lower.tri(cov(dados))]
library(Matrix)
triu(cov(dados))
?tril
diag(cor(dados))
diag(diag(cor(dados)))
diag(rep(1,7))
cor(dados) - diag(rep(1,7))
tril(cor(dados) - diag(rep(1,7)))
triu(cov(dados)) + tril(cor(dados) - diag(rep(1,7)))
round(triu(cov(dados)) + tril(cor(dados) - diag(rep(1,7))),2)
# ACP via Matriz de covariância
p <- ncol(dados)
m.cov<-cov(dados)
m.cov <- cov(dados)
aut.val <-  eigen(m.cov)$values
aut.vec <- -(eigen(m.cov)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
m.dp.var <-  (matrix(sqrt(diag(m.cov)),p,p))
result.cp.cov <- princomp(dados,cor=FALSE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)/m.dp.var
summary(result.cp.cov)
par(mfrow=c(1,1))
screeplot(result.cp.cov,type=c("lines"),main="autovalores")
screeplot(result.cp.cov,type=c("lines"),main="autovalores")
screeplot(result.cp.cov,type=c("lines"),main="autovalores",ylab="Variâncias")
par(mfrow=c(1,1))
screeplot(result.cp.cov,type=c("lines"),main="autovalores")
# Diagrama de dispersão
plot(dados[sample(1:n,5000,replace = FALSE),],cex=1.2,cex.lab=1.5)
# Diagrama de dispersão
plot(dados[sample(1:n,5000,replace = FALSE),],cex=1.5,cex.lab=1.5)
# Diagrama de dispersão
plot(dados[sample(1:n,50,replace = FALSE),],cex=2,cex.lab=1.5)
# Diagrama de dispersão
plot(dados[sample(1:n,50,replace = FALSE),],cex=2,cex.lab=2)
# Diagrama de dispersão
plot(dados[sample(1:n,50,replace = FALSE),],cex=2,cex.lab=1)
# Diagrama de dispersão
plot(dados[sample(1:n,50,replace = FALSE),],cex=1,cex.lab=1)
# Diagrama de dispersão
plot(dados[sample(1:n,50,replace = FALSE),],cex=.5,cex.lab=1)
# Diagrama de dispersão
plot(dados[sample(1:n,5000,replace = FALSE),],cex=.5,cex.lab=1)
# ACP via Matriz de covariância
p <- ncol(dados)
m.cov <- cov(dados)
aut.val <-  eigen(m.cov)$values
aut.vec <- -(eigen(m.cov)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
m.dp.var <-  (matrix(sqrt(diag(m.cov)),p,p))
result.cp.cov <- princomp(dados,cor=FALSE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)/m.dp.var
summary(result.cp.cov)
par(mfrow=c(1,1))
screeplot(result.cp.cov,type=c("lines"),main="autovalores")
aut.val
round(aut.val,2)
round(aut.vec,2)
xtable(round(aut.vec,2))
aut.vec
round(aut.vec[,1:2],2)
t(round(aut.vec[,1:2],2))
corr.cp.var
t(round(corr.cp.var[,1:2],2))
# ACP via  Matriz de Correlações
m.cor<-cor(dados)
aut.val <-  eigen(m.cor)$values
aut.vec <- -(eigen(m.cor)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
result.cp.cor <- princomp(dados,cor=TRUE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)
summary(result.cp.cor)
screeplot(result.cp.cor,type=c("lines"),main="autovalores",cex=1.2,cex.lab=1.2,cex.main=1.2)
dim(result.cp.cor$loadings)
dim(result.cp.cor$scores)
cp1 <-  -cbind((result.cp.cor$scores)[,1])
cp2 <-  -cbind((result.cp.cor$scores)[,2])
# Dispersão entre as componentes
par(mfrow=c(1,1))
plot(cp1,cp2,cex=1.2,ylim=c(-3,3),xlim=c(-3,3))
rep(19,5)
plot(cp1,cp2,cex=1.2,ylim=c(-3,3),xlim=c(-3,3))
legend(-1,-1,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1.2)
plot(cp1,cp2,cex=1.2,ylim=c(-3,3),xlim=c(-3,3),col = c(labels=diamonds$cut))
plot(cp1,cp2,cex=.2,ylim=c(-3,3),xlim=c(-3,3),col = c(labels=diamonds$cut))
legend(-1,-1,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1.2)
plot(cp1,cp2,cex=.2,ylim=c(-4,4),xlim=c(-4,4),col = c(labels=diamonds$cut))
plot(cp1,cp2,cex=.2,ylim=c(-4,4),xlim=c(-5,4),col = c(labels=diamonds$cut))
par(mfrow=c(2,2))
boxplot(cbind(cp1,cp2),cex.lab=1.2,xlab="CP")
hist(cp1,probability=TRUE,main="CP1")
hist(cp2,probability=TRUE,main="CP2")
plot(cp1,cp2,cex=.2,ylim=c(-5,5),xlim=c(-5,5),col = c(labels=diamonds$cut))
legend(-4,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1.2)
# Dispersão entre as componentes
par(mfrow=c(1,1))
plot(cp1,cp2,cex=.2,ylim=c(-5,5),xlim=c(-5,5),col = c(labels=diamonds$cut))
legend(-4,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1.2)
plot(cp1,cp2,cex=.2,ylim=c(-5,5),xlim=c(-6,5),col = c(labels=diamonds$cut))
plot(cp1,cp2,cex=.2,ylim=c(-6,6),xlim=c(-7,6),col = c(labels=diamonds$cut))
plot(cp1,cp2,cex=.2,ylim=c(-6,6),xlim=c(-8,6),col = c(labels=diamonds$cut))
legend(-4,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1.2)
legend(-8,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1.2)
legend(4,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1.2)
legend(3,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1.2)
plot(cp1,cp2,cex=.2,ylim=c(-6,6),xlim=c(-8,6),col = c(labels=diamonds$cut))
legend(3,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1.2)
legend(3,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=.5)
legend(3,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=.8)
legend(3,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1)
plot(cp1,cp2,cex=.2,ylim=c(-6,6),xlim=c(-8,6),col = c(labels=diamonds$cut))
legend(3,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1)
par(mfrow=c(1,2))
hist(cp1,probability=TRUE,main="CP1")
hist(cp2,probability=TRUE,main="CP2")
par(mfrow=c(1,2))
hist(cp1,probability=TRUE, xlab = "CP1", ylab = "Densidade", main = "")
hist(cp2,probability=TRUE, xlab = "CP2", ylab = "Densidade", main = "")
# Dispersão entre as componentes
par(mfrow=c(1,1))
plot(cp1,cp2,cex=.2,ylim=c(-6,6),xlim=c(-8,6),col = c(labels=diamonds$cut))
legend(3,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1)
legend(3,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1,main = "Qualidade do corte")
legend(3,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1,title = "Qualidade do corte")
legend(3,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1,title = paste("Qualidade \n do corte"))
plot(cp1,cp2,cex=.2,ylim=c(-6,6),xlim=c(-8,6),col = c(labels=diamonds$cut))
legend(3,-2,col=c(1:5),pch=rep(19,5),
legend=c("Médio","Bom","Muito bom","Premium","Ideal"),
bty="n",cex=1,title = paste("Qualidade \n do corte"))
# ACP via  Matriz de Correlações
m.cor<-cor(dados)
aut.val <-  eigen(m.cor)$values
round(aut.val,2)
aut.vec <- -(eigen(m.cor)$vectors)
xtable(round(aut.vec,2))
m.aut.val <- t(matrix(((aut.val)),p,p))
result.cp.cor <- princomp(dados,cor=TRUE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)
summary(result.cp.cor)
screeplot(result.cp.cor,type=c("lines"),main="autovalores",cex=1.2,cex.lab=1.2,cex.main=1.2)
t(round(aut.vec[,1:2],2))
t(round(corr.cp.var[,1:2],2))
colnames(dados)
par(mfrow=c(1,1))
biplot(result.cp.cor,xlim=c(-0.3,0.4))
biplot(result.cp.cor,xlim=c(-0.1,0.1))
biplot(result.cp.cor,xlim=c(-0.05,0.05))
?biplot
biplot(result.cp.cor,xlim=c(-0.02,0.05),cex=.5)
biplot(result.cp.cor,xlim=c(-0.02,0.05),cex=.8)
